server.port=8081
spring.jpa.hibernate.show-sql=true
spring.jpa.show-sql=true
spring.jpa.hibernate.database=POSTGRESQL

spring.jpa.datasource.platform=postgres
spring.jpa.datasource.url=jdbc:postgresql://localhost:5432/lunarkdb
spring.jpa.datasource.username="postgres"
spring.jpa.datasource.password="postgres"
spring.jpa.datasource.driverClassName=org.postgresql.Driver
spring.jpa.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=create-drop

spring.servlet.multipart.max-file-size=4MB
spring.servlet.multipart.max-request-size=4MB

# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:server.keystore
# The password used to generate the certificate
server.ssl.key-store-password=changeit
# The alias mapped to the certificate
server.ssl.key-alias=some-alias
server.ssl.enabled=true

# Keycloak configuration
spring.security.oauth2.client.registration.keycloak.client-id=login-app
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/booking
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/booking

# LDAP configuration
spring.ldap.urls=ldap://localhost:10389
spring.ldap.username=uid=admin,ou=system
spring.ldap.password=secret